%!PS-Adobe-2.0 EPSF-2.0
%%Title: rooms_4_TimePerAction_DiscountedReturn.tex
%%Creator: gnuplot 5.0 patchlevel 1
%%CreationDate: Sat Apr 16 17:06:57 2016
%%DocumentFonts: 
%%BoundingBox: 50 50 302 238
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following true/false flags may be edited by hand if desired.
% The unit line width and grayscale image gamma correction may also be changed.
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape false def
/Level1 false def
/Level3 false def
/Rounded false def
/ClipToBoundingBox false def
/SuppressPDFMark false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/Gamma 1.0 def
/BackgroundColor {-1.000 -1.000 -1.000} def
%
/vshift -66 def
/dl1 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength userlinewidth gnulinewidth div mul mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/doclip {
  ClipToBoundingBox {
    newpath 50 50 moveto 302 50 lineto 302 238 lineto 50 238 lineto closepath
    clip
  } if
} def
%
% Gnuplot Prolog Version 5.0 (Dec 2014)
%
%/SuppressPDFMark true def
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/g {setgray} bind def
/Gshow {show} def   % May be redefined later in the file to support UTF-8
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray textshow grestore} {textshow} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
3.8 setmiterlimit
% Classic Line colors (version 5.0)
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default dash patterns (version 5.0)
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [2 dl1 3 dl2] LC1 DL} def
/LT2 {PL [1 dl1 1.5 dl2] LC2 DL} def
/LT3 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC3 DL} def
/LT4 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [4 dl1 2 dl2] LC5 DL} def
/LT6 {PL [1.5 dl1 1.5 dl2 1.5 dl1 1.5 dl2 1.5 dl1 6 dl2] LC6 DL} def
/LT7 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC8 DL} def
/SL {[] 0 setdash} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave closepath fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
  clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
dup 2 lt
	{/InterpretLevel1 true def
	 /InterpretLevel3 false def}
	{/InterpretLevel1 Level1 def
	 2 gt
	    {/InterpretLevel3 Level3 def}
	    {/InterpretLevel3 false def}
	 ifelse }
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
%
Level1 SuppressPDFMark or 
{} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (rooms_4_TimePerAction_DiscountedReturn.tex)
  /Subject (gnuplot plot)
  /Creator (gnuplot 5.0 patchlevel 1)
  /Author (baj)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Sat Apr 16 17:06:57 2016)
  /DOCINFO pdfmark
end
} ifelse
end
%
% Support for boxed text - Ethan A Merritt May 2005
%
/InitTextBox { userdict /TBy2 3 -1 roll put userdict /TBx2 3 -1 roll put
           userdict /TBy1 3 -1 roll put userdict /TBx1 3 -1 roll put
	   /Boxing true def } def
/ExtendTextBox { Boxing
    { gsave dup false charpath pathbbox
      dup TBy2 gt {userdict /TBy2 3 -1 roll put} {pop} ifelse
      dup TBx2 gt {userdict /TBx2 3 -1 roll put} {pop} ifelse
      dup TBy1 lt {userdict /TBy1 3 -1 roll put} {pop} ifelse
      dup TBx1 lt {userdict /TBx1 3 -1 roll put} {pop} ifelse
      grestore } if } def
/PopTextBox { newpath TBx1 TBxmargin sub TBy1 TBymargin sub M
               TBx1 TBxmargin sub TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy2 TBymargin add L
	       TBx2 TBxmargin add TBy1 TBymargin sub L closepath } def
/DrawTextBox { PopTextBox stroke /Boxing false def} def
/FillTextBox { gsave PopTextBox 1 1 1 setrgbcolor fill grestore /Boxing false def} def
0 0 0 0 InitTextBox
/TBxmargin 20 def
/TBymargin 20 def
/Boxing false def
/textshow { ExtendTextBox Gshow } def
%
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
doclip
50 50 translate
0.050 0.050 scale
0 setgray
newpath
1.000 UL
LTb
LCb setrgbcolor
LTb
0.500 UL
LTa
LCa setrgbcolor
980 640 M
3699 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
980 640 M
63 0 V
3636 0 R
-63 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
980 1053 M
1080 0 V
2499 0 R
120 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
980 1053 M
63 0 V
3636 0 R
-63 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
980 1466 M
3699 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
980 1466 M
63 0 V
3636 0 R
-63 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
980 1879 M
3699 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
980 1879 M
63 0 V
3636 0 R
-63 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
980 2292 M
3699 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
980 2292 M
63 0 V
3636 0 R
-63 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
980 2705 M
3699 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
980 2705 M
63 0 V
3636 0 R
-63 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
980 3118 M
3699 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
980 3118 M
63 0 V
3636 0 R
-63 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
980 3531 M
3699 0 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
980 3531 M
63 0 V
3636 0 R
-63 0 V
stroke
0.500 UL
LTa
LCa setrgbcolor
980 640 M
0 2891 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
980 640 M
0 63 V
0 2828 R
0 -63 V
1351 640 M
0 31 V
0 2860 R
0 -31 V
1568 640 M
0 31 V
0 2860 R
0 -31 V
1722 640 M
0 31 V
0 2860 R
0 -31 V
1842 640 M
0 31 V
0 2860 R
0 -31 V
1939 640 M
0 31 V
0 2860 R
0 -31 V
2022 640 M
0 31 V
0 2860 R
0 -31 V
2094 640 M
0 31 V
0 2860 R
0 -31 V
2157 640 M
0 31 V
0 2860 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
2213 640 M
0 63 V
0 560 R
0 2268 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
2213 640 M
0 63 V
0 2828 R
0 -63 V
2584 640 M
0 31 V
0 2860 R
0 -31 V
2801 640 M
0 31 V
0 2860 R
0 -31 V
2955 640 M
0 31 V
0 2860 R
0 -31 V
3075 640 M
0 31 V
0 2860 R
0 -31 V
3172 640 M
0 31 V
0 2860 R
0 -31 V
3255 640 M
0 31 V
0 2860 R
0 -31 V
3327 640 M
0 31 V
0 2860 R
0 -31 V
3390 640 M
0 31 V
0 2860 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
3446 640 M
0 63 V
0 560 R
0 2268 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
3446 640 M
0 63 V
0 2828 R
0 -63 V
3817 640 M
0 31 V
0 2860 R
0 -31 V
4034 640 M
0 31 V
0 2860 R
0 -31 V
4188 640 M
0 31 V
0 2860 R
0 -31 V
4308 640 M
0 31 V
0 2860 R
0 -31 V
4405 640 M
0 31 V
0 2860 R
0 -31 V
4488 640 M
0 31 V
0 2860 R
0 -31 V
4560 640 M
0 31 V
0 2860 R
0 -31 V
4623 640 M
0 31 V
0 2860 R
0 -31 V
stroke
0.500 UL
LTa
LCa setrgbcolor
4679 640 M
0 2891 V
stroke
1.000 UL
LTb
LCb setrgbcolor
LTb
4679 640 M
0 63 V
0 2828 R
0 -63 V
stroke
980 3531 N
980 640 L
3699 0 V
0 2891 V
-3699 0 V
Z stroke
1.000 UP
1.000 UL
LTb
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C LCb setrgbcolor
1.000 UP
1.000 UL
LTb
0.58 0.00 0.83 C 4076 1193 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1716 660 M
380 14 V
370 78 V
359 60 V
366 129 V
377 371 V
1716 648 M
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
349 -20 R
0 44 V
-31 -44 R
62 0 V
-62 44 R
62 0 V
339 -4 R
0 120 V
2435 692 M
62 0 V
-62 120 R
62 0 V
328 -38 R
0 76 V
-31 -76 R
62 0 V
-62 76 R
62 0 V
335 36 R
0 109 V
3160 886 M
62 0 V
-62 109 R
62 0 V
346 230 R
0 174 V
-31 -174 R
62 0 V
-62 174 R
62 0 V
1716 660 Pls
2096 674 Pls
2466 752 Pls
2825 812 Pls
3191 941 Pls
3568 1312 Pls
4275 1193 Pls
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LTb
0.00 0.62 0.45 C LCb setrgbcolor
1.000 UP
1.000 UL
LTb
0.00 0.62 0.45 C 4076 1053 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1769 671 M
370 -6 V
371 30 V
351 185 V
377 74 V
370 114 V
1769 651 M
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
339 -33 R
0 15 V
-31 -15 R
62 0 V
-62 15 R
62 0 V
340 1 R
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
320 108 R
0 111 V
2830 824 M
62 0 V
-62 111 R
62 0 V
346 -37 R
0 112 V
3207 898 M
62 0 V
-62 112 R
62 0 V
339 -4 R
0 124 V
-31 -124 R
62 0 V
-62 124 R
62 0 V
1769 671 Crs
2139 665 Crs
2510 695 Crs
2861 880 Crs
3238 954 Crs
3608 1068 Crs
4275 1053 Crs
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LTb
0.34 0.71 0.91 C LCb setrgbcolor
1.000 UP
1.000 UL
LTb
0.34 0.71 0.91 C 4076 913 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1908 668 M
332 -18 V
326 48 V
333 162 V
338 475 V
319 479 V
357 516 V
1908 655 M
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
301 -34 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
295 22 R
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
302 98 R
0 84 V
-31 -84 R
62 0 V
-62 84 R
62 0 V
307 346 R
0 175 V
-31 -175 R
62 0 V
-62 175 R
62 0 V
288 307 R
0 169 V
-31 -169 R
62 0 V
-62 169 R
62 0 V
326 350 R
0 162 V
-31 -162 R
62 0 V
-62 162 R
62 0 V
1908 668 Star
2240 650 Star
2566 698 Star
2899 860 Star
3237 1335 Star
3556 1814 Star
3913 2330 Star
4275 913 Star
1.000 UP
1.000 UL
LTb
LCb setrgbcolor
LTb
0.90 0.62 0.00 C LCb setrgbcolor
1.000 UP
1.000 UL
LTb
0.90 0.62 0.00 C 4076 773 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1703 805 M
341 -12 V
2349 689 L
354 908 V
321 378 V
309 611 V
352 377 V
318 315 V
342 93 V
1703 757 M
0 96 V
-31 -96 R
62 0 V
-62 96 R
62 0 V
2044 747 M
0 92 V
-31 -92 R
62 0 V
-62 92 R
62 0 V
2349 668 M
0 41 V
-31 -41 R
62 0 V
-62 41 R
62 0 V
323 790 R
0 197 V
-31 -197 R
62 0 V
-62 197 R
62 0 V
290 194 R
0 171 V
-31 -171 R
62 0 V
-62 171 R
62 0 V
278 455 R
0 140 V
-31 -140 R
62 0 V
-62 140 R
62 0 V
321 243 R
0 129 V
-31 -129 R
62 0 V
-62 129 R
62 0 V
287 205 R
0 89 V
-31 -89 R
62 0 V
-62 89 R
62 0 V
311 11 R
0 76 V
-31 -76 R
62 0 V
-62 76 R
62 0 V
1703 805 Box
2044 793 Box
2349 689 Box
2703 1597 Box
3024 1975 Box
3333 2586 Box
3685 2963 Box
4003 3278 Box
4345 3371 Box
4275 773 Box
2.000 UL
LTb
LCb setrgbcolor
LTb
1.000 UL
LTb
980 3531 N
980 640 L
3699 0 V
0 2891 V
-3699 0 V
Z stroke
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
